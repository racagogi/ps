(define n (read))
(define mod2 (make-vector 501 0))
(define mod5 (make-vector 501 0))
(define (iter count)
  (if (<= count n)
    (begin (if (= (modulo count 2) 0) (vector-set! mod2 count (+ 1 (vector-ref mod2 (quotient count 2)))))
           (if (= (modulo count 5) 0) (vector-set! mod5 count (+ 1 (vector-ref mod5 (quotient count 5)))))
           (iter (+ 1 count)))))

(iter 1)
(define (vector-sum count acc2 acc5)
  (if (<= count n)
    (vector-sum (+ 1 count)
                (+ acc2 (vector-ref mod2 count))
                (+ acc5 (vector-ref mod5 count)))
    (min acc5 acc2)))
(display (vector-sum 1 0 0))
(newline)
