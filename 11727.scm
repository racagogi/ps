(define dp-vec (make-vector 2 0))
(vector-set! dp-vec 0 1)
(vector-set! dp-vec 1 3)
(define (dp n)
  (define n-1 (vector-ref dp-vec 0))
  (define n-2 (vector-ref dp-vec 1))
  (if (> n 0)
    (begin (vector-set! dp-vec 0 (modulo (+ (* 2 n-1) n-2) 10007))
           (vector-set! dp-vec 1 (modulo (+ (vector-ref dp-vec 0) (* n-2 2)) 10007))
           (dp (- n 1)))))
(define n (- (read) 1))
(dp (quotient n 2))
(print (modulo (vector-ref dp-vec (modulo n 2)) 10007))
