(define n (read))
(define dp-vector (make-vector (+ n 1) 0))
(define save-vector (make-vector (+ n 1) 0))
(define (init count)
  (if (<= count n)
    (begin (vector-set! save-vector count (read))
           (init (+ count 1)))))
(init 1)
(vector-set! dp-vector 1 (vector-ref save-vector 1))
(define (subsum count acc)
  (if (<= count n)
    (begin (vector-set! dp-vector count (max (+ (vector-ref dp-vector (- count 1))
                                                (vector-ref save-vector count))
                                             (vector-ref save-vector count)))
           (subsum (+ count 1) (max acc (vector-ref dp-vector count))))
    (print acc)))
(subsum 2 (vector-ref dp-vector 1))
