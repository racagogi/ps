(define count (read))
(define cost-red (make-vector 1010 0))
(define cost-blue (make-vector 1010 0))
(define cost-green (make-vector 1010 0))
(define (update n)
  (define r (read))
  (define g (read))
  (define b (read))
  (if (= n 0)
    (begin (vector-set! cost-red 0 r)
           (vector-set! cost-green 0 g)
           (vector-set! cost-blue 0 b))
    (begin (vector-set! cost-red n
                        (min (+ r (vector-ref cost-blue (- n 1)))
                             (+ r (vector-ref cost-green (- n 1)))))
           (vector-set! cost-green n
                        (min (+ g (vector-ref cost-blue (- n 1)))
                             (+ g (vector-ref cost-red (- n 1)))))
           (vector-set! cost-blue n
                        (min (+ b (vector-ref cost-green (- n 1)))
                             (+ b (vector-ref cost-red (- n 1))))))))
(define (iter n)
  (if (< n count)
    (begin (update n) (iter (+ n 1)))
    (min (vector-ref cost-red (- n 1))
         (vector-ref cost-blue (- n 1))
         (vector-ref cost-green (- n 1)))))

(display (iter 0))
(newline)
